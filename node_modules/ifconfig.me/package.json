{
  "author": {
    "name": "Alexandre Lacheze",
    "url": "alexstrat"
  },
  "name": "ifconfig.me",
  "description": "Get your external ifconfig in Node.js using web-service ifconfig.me",
  "version": "0.0.1",
  "homepage": "http://github.com/alextsrat/ifconfig.me-node",
  "repository": {
    "type": "git",
    "url": "git://github.com/alextsrat/ifconfig.me-node.git"
  },
  "main": "lib/index.js",
  "scripts": {
    "test": "node test/showme.js"
  },
  "engines": {
    "node": ">=0.4"
  },
  "dependencies": {},
  "devDependencies": {},
  "readme": "## What ?\nQuery the [ifconfig.me](ifconfig.me) server to know your external network configuration (external IP and remote host) inside [Node.js](nodejs.org).\n\nThis is not a big deal, but it's done here and useable as NPM package. It makes a GET request to `ifconfig.me/all.json` and parses the response to provide it in a callback.\n\n## Install\n\nFor the moment :\n\n```bash\n$ npm install https://github.com/alexstrat/ifconfig.me-node/tarball/master\n```\n\n## Usage\n\nYou've got 3 methods : \n\n  - `get`           - to get the raw JSON provided by `ifconfig.me`\n  - `getIP`         - to get directly your external IP\n  - `getRemoteHost` - to get directly your remote host\n\nThese methods take 2 arguements :\n\n  - `callback`  - when the erver responds and the response is valid this function is called with the result as argement.\n  - `errback`   - _optionnal_ when something goes wrong, this function is called with the error object as argument.\n  \n```js\nifconfig = require('ifconfig.me');\n\nifconfig.getIP(function(ip){\n  console.log(ip); // your ext. IP\n}, function(error){\n  console.log(error);\n});\n\nifconfig.getRemoteHost(function(rh){\n  console.log(rh); // your remote host\n}, function(error){\n  console.log(error);\n});\n\nifconfig.get(function(json){\n  console.log(json); // your ext. netw conf. as JSON \n}, function(error){\n  console.log(error);  \n});\n\n```\n\n## Test it\n\n```bash\n$ node test/showme.js\n```\n\n## LICENCE\n\nThe MIT licence.\n\nCopyright (C) <2011> <Alexandre Lacheze>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n  \n",
  "readmeFilename": "README.md",
  "_id": "ifconfig.me@0.0.1",
  "dist": {
    "shasum": "b2f6ad498f805a41845c7c787ed1dc90eadd0cea"
  },
  "_from": "https://github.com/alexstrat/ifconfig.me-node/tarball/master",
  "_resolved": "https://github.com/alexstrat/ifconfig.me-node/tarball/master"
}
